w8報告摘要

(第一題) 請寫一個執行時可以列出 9×9 乘法表的網際 Python 程式, 然後 Push 到個人 bitbucket 空間, 而且同步指到 OpenShift 個人帳號上執行.

程式碼:
for x in range(0,10):
      for y in range(0,10):
          print(x,'*',y,'=',x*y)
          
解題過程:
打完程式後，之後我把它上傳到bitbucket，git add .→ git commit -m “99”→ git push，之後為了要把99乘法表顯示在openshift CMSimply上，進去openshift CMSimply的資料夾→ wsgi資料夾→ application檔案，在裡面新增一個class 的格式，之後連線FileZilla , 把application檔案覆蓋到app-root/runtime/repo/wsgi的application檔案下，之後進去openshift CMSimply的網站，就顯示99乘法表了。

2.(第二題) 請將上述執行過程錄為 flv 後, 上傳到個人的 Vemeo 空間中, 並將網址回報到各組網站 (dokuwiki 與 CMSimply)與報告中, 並且將相關心得與報告連結登錄到 wiki.mde.tw 第八週的分組頁面中.

網址:https://vimeo.com/93010133

3.(第三題) (協同計分, 分組進行) 請在各組的雲端 dowiki 中,根據下列 40 個帳號與密碼, 新增對應的使用者帳號與密碼後, 將雲端網址登錄在 wiki.mde.tw 各組第八週頁面中, 並說明操作過程與心得後, 將心得整理成 pdf 後繳交到 course@mde.tw.

解題過程:用手打


2bg16 w9報告摘要


1. 第一題 : 請寫一個執行時可以列出以十為底對數表的網際 Python 程式，然後 Push 到個人 bitbucket 空間，而且同步指到 OpenShift 個人帳號上執行。

- 程式碼:

```python 
import math
count = 0
text='%04d'
for i in range(100,200+10):
    print(text%round(math.log(i/100,10)*10000,0),end='-')
    count += 1
    if(count == 10):
        print()
        count = 0
```

- 解題過程:
　　　　打完程式之後按go執行，就可以跑出以十為底對數。

 

- 解題心得:
　　　　只會程式以及上傳到bitbucket上。

 

2. 請在個人的 OpenShift 平台上建立一個能夠列印出與九九乘法表結果完全相同的網際程式，接著在乘法表上端加上兩個輸入表單, 讓使用者輸入兩個整數，按下送出鍵後，程式會列出以此兩個整數為基底的乘法表，例如: 若兩個欄位都輸入: 9，則列出九九乘法表, 若輸入 9，20，則列出 9×20 的乘法表。


- 解題過程:
                打完程式後，之後把它上傳到bitbucket，git add .→ git commit -m “w9_2”→ git push，進去openshift CMSimply的資料夾→ wsgi資料夾→ application檔案，在裡面新增一個class 的格式，之後連線FileZilla , 把application檔案覆蓋到app－root/runtime/repo/wsgi的application檔案下，就可以在openshift的CMSimply上顯示，進到openshift的CMSimply後,輸入 9，20，就可以列出 9×20 的乘法表了。
 
- 解題心得:
            打好程式之後為了要在openshift的CMSimply上可以顯示研究了很久。


3. 請在各組的雲端 dokuwiki 中，新增帳號與密碼都是由 abc001 ~ abc399 字串所組成的 399 名用戶登入對應資料，並將製作過程與驗證流程拍成 flv 後上傳到個人的 Vimeo 資料區，並將連結放在個人第九週頁面。

- 程式碼:

```python
import hashlib
# convert user_password into sha1 encoded string
def gen_password(user_password):
    return hashlib.sha1(user_password.encode("utf-8")).hexdigest()
text='abc%03d'
for i in range(1,399+1):
    print(text%(i)+':'+gen_password(text%(i))+':'+text%(i)+'@gmail.com:'+text%(i)+'@gmail.com:'+'user')
```

- 解題過程:
                寫一個能產生帳號密碼由abc001 ~ abc399字串所組成的399個用戶登入資料，然後打開FileZilla並且連線到openshift的dokuwiki，把程式碼貼到app-root/data/conf/users.auth.php下，之後打開dokuwiki網站並登入→上面admin→user manager確認。

- 解題心得:
                打好程式產生帳號密碼由abc001 ~ abc399字串所組成的399個用戶，並且要讓這些帳號密碼跟一開始的格式一樣，所以還要再改程式，如同users.auth.php。

===
